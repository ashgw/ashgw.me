// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "../src/generated/client"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Category {
  SOFTWARE
  HEALTH
  PHILOSOPHY
}

model Post {
  slug          String    @id @db.VarChar(255) // as in the unqiue identifier for the post URL
  title         String    @db.VarChar(200)  // this will be used in the title & preview card
  seoTitle      String    @db.VarChar(300)  // this will be used in the SEO title, can be the same as summary if it makes sense
  summary       String    @db.VarChar(300)      
  s3Key         String    @db.VarChar(512)   // S3 object key where content is stored
  contentType   String    @db.VarChar(50)    // MIME type of the content
  size          Int       // file size in bytes
  firstModDate  DateTime  @db.Timestamp(3) // when the post was first modified
  lastModDate   DateTime  @updatedAt @db.Timestamp(3) // when the post was last modified, if both are same the UI shows `archive` this is an easter egg tho
  isReleased    Boolean
  isSequel      Boolean
  minutesToRead Int       @db.SmallInt         
  tags          String[]                      
  category      Category                       
}

model PostBodyContent {
  id            String    @id @default(cuid()) 
  name          String    @unique @db.VarChar(255) // this will be used in the URL 
  s3Key         String    @db.VarChar(512)   // S3 object key where content is stored
  contentType   String    @db.VarChar(50)    // MIME type of the content
  size          Int       // file size in bytes
  uploadedAt    DateTime  @default(now())
  lastModified  DateTime  @updatedAt
}

model Upload {
  id           String   @id @default(cuid())
  key          String   @unique @db.VarChar(512)
  type         UploadType
  contentType  String   @db.VarChar(100)
  size         Int
  uploadedAt   DateTime @default(now())
  entityType   UploadEntityType @default(POST)
  entityId     String         
}

enum UploadType {
  IMAGE
  AUDIO
  MDX
}

enum UploadEntityType {
  POST
}
