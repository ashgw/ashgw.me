---
description: 
globs: 
alwaysApply: false
---
**Description**: Guidelines for managing environment variables in the project.
**Globs**: `**/*`
alwaysApply: true
---

### Environment Variable Management

In our codebase, we maintain a single source of truth for environment variables located in `packages/env/index.ts`. This file is the designated place for all environment variable definitions.

#### Adding Environment Variables
To add a new environment variable:
1. Include it in the `vars` object.
2. Also, add it to the `runtimeEnv` object.
3. add to `turbo.json`
```json
{
  "globalEnv": [
    // ...other env vars
    "MY_ENV_VAR",
  ]
}
```

#### Removing Environment Variables
To remove an existing environment variable:
1. Delete it from the `vars` object.
2. Remove it from the `runtimeEnv` object as well.

#### Usage of Environment Variables
When you need to access an environment variable, you must import the `env` package instead of directly using `process.env`. This ensures consistency and correctness across the application.

**Correct Usage:**

```ts
import { env } from "@ashgw/env";

const myVar = env.NEXT_PUBLIC_MY_VAR;
```

**Incorrect Usage:**
```ts
const myVar = process.env.NEXT_PUBLIC_MY_VAR;
```
