name: CI / DB Migrate

description: Run database migrations (Against the real Databases)

inputs:
  comment_on_pr:
    required: true
    description: "Whether to comment on the PR ('yes' or 'no') after running the migration"

runs:
  using: "composite"
  steps:
    - name: Mask database url if not done already
      shell: bash
      run: |
        set -euo pipefail
        if [[ -z "${DATABASE_URL:-}" ]]; then
          echo "DATABASE_URL is not set"; exit 1
        fi
        echo "::add-mask::$DATABASE_URL"

    - name: Run migrations on the $NEXT_PUBLIC_CURRENT_ENV database
      shell: bash
      run: |
        pnpm --filter @ashgw/db exec prisma migrate deploy 2>&1 | grep -v "Datasource" | grep -v "database" | grep -v "schema" | grep -v "at"

    - name: Validate migrations on the $NEXT_PUBLIC_CURRENT_ENV database
      shell: bash
      run: |
        pnpm --filter @ashgw/db exec prisma migrate status 2>&1 | grep -v "Datasource" | grep -v "database" | grep -v "schema" | grep -v "at"

    - name: Comment on PR
      if: github.event_name == 'pull_request' && inputs.comment_on_pr == 'yes'
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}

      run: |
        pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        repo="${{ github.repository }}"

        comment_body="Database migrations were successfully deployed to the $NEXT_PUBLIC_CURRENT_ENV branch of the database."

        curl -s -X POST \
          -H "Authorization: token $GH_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"${comment_body}\"}" \
          "https://api.github.com/repos/${repo}/issues/${pr_number}/comments"

    - name: Check for schema drift & dangerous undisclosed ops (can manually bypass this if it erros & uk better)
      shell: bash
      run: |
        pnpm --filter @ashgw/db exec prisma migrate diff \
        --from-url="$DATABASE_URL" \
        --to-schema-datamodel=./prisma/schema.prisma \
        --script > migration.sql 2>&1

        bash .github/scripts/check-migration-safety.sh migration.sql

