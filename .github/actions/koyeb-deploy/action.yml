name: Koyeb Preview Deployment

description: Build and deploy container image to Koyeb via GHCR

inputs:
  NODE_ENV:
    description: "Node environment, either 'production' or 'preview' (this will determine which image is pushed and where it redeploys)"
    required: true
    default: "preview"
  KOYEB_TOKEN:
    description: "Koyeb API token"
    required: true
  SERVICE_NAME:
    description: "Koyeb service name, either 'blog' or 'www' or whatever app you're running"
    required: true
  GITHUB_TOKEN:
    description: "GitHub token with packages:write for GHCR and PR comments"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to GHCR
      shell: bash
      run: |
        echo "${{ inputs.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Build image
      shell: bash
      run: |
        IMAGE="ghcr.io/${{ github.repository_owner }}/${{ inputs.SERVICE_NAME }}:${{ inputs.NODE_ENV }}"
         docker build \
           --build-arg CI=true
           --build-arg NODE_ENV="${NODE_ENV}" \
           --build-arg IS_PREVIEW="${{ inputs.NODE_ENV == 'preview' && 'true' || 'false' }}" \
           --build-arg IP_HASH_SALT="${IP_HASH_SALT}" \
           --build-arg SENTRY_ORG="${SENTRY_ORG}" \
           --build-arg SENTRY_PROJECT="${SENTRY_PROJECT}" \
           --build-arg SENTRY_AUTH_TOKEN="${SENTRY_AUTH_TOKEN}" \
           --build-arg DATABASE_URL="${DATABASE_URL}" \
           --build-arg S3_BUCKET_NAME="${S3_BUCKET_NAME}" \
           --build-arg S3_BUCKET_REGION="${S3_BUCKET_REGION}" \
           --build-arg S3_BUCKET_ACCESS_KEY_ID="${S3_BUCKET_ACCESS_KEY_ID}" \
           --build-arg S3_BUCKET_SECRET_KEY="${S3_BUCKET_SECRET_KEY}" \
           --build-arg S3_BUCKET_URL="${S3_BUCKET_URL}" \
           --build-arg KIT_API_KEY="${KIT_API_KEY}" \
           --build-arg NEXT_PUBLIC_WWW_URL="${NEXT_PUBLIC_WWW_URL}" \
           --build-arg NEXT_PUBLIC_BLOG_URL="${NEXT_PUBLIC_BLOG_URL}" \
           --build-arg NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID="${NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID}" \
           --build-arg NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID="${NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID}" \
           --build-arg NEXT_PUBLIC_SENTRY_DSN="${NEXT_PUBLIC_SENTRY_DSN}" \
           --build-arg NEXT_PUBLIC_POSTHOG_KEY="${NEXT_PUBLIC_POSTHOG_KEY}" \
           --build-arg NEXT_PUBLIC_POSTHOG_HOST="${NEXT_PUBLIC_POSTHOG_HOST}" \
           -t "$IMAGE" -f "deployment/${{ inputs.SERVICE_NAME }}/Dockerfile" .

    - name: Push image (production + latest)
      if: ${{ inputs.NODE_ENV == 'production' }}
      shell: bash
      run: |
        IMAGE="ghcr.io/${{ github.repository_owner }}/${{ inputs.SERVICE_NAME }}:${{ inputs.NODE_ENV }}"
        LATEST="ghcr.io/${{ github.repository_owner }}/${{ inputs.SERVICE_NAME }}:latest"
        docker push "$IMAGE"
        docker tag "$IMAGE" "$LATEST"
        docker push "$LATEST"

    - name: Push image (preview)
      if: ${{ inputs.NODE_ENV == 'preview' }}
      shell: bash
      run: |
        IMAGE="ghcr.io/${{ github.repository_owner }}/${{ inputs.SERVICE_NAME }}:preview"
        docker push "$IMAGE"

    - name: Install Koyeb CLI and redeploy
      shell: bash
      run: |
        # Write Koyeb CLI config
        cat > "$HOME/.koyeb.yaml" << EOF
        debug: false
        organization: ""
        token: ${{ inputs.KOYEB_TOKEN }}
        url: https://app.koyeb.com
        EOF

        # Install CLI
        curl -fsSL https://raw.githubusercontent.com/koyeb/koyeb-cli/master/install.sh | sh
        export PATH="$HOME/.koyeb/bin:$PATH"

        # Choose target
        if [[ "${{ inputs.NODE_ENV }}" == "production" ]]; then
          echo "Deploying to production environment"
          DEPLOY_TARGET="${{ inputs.SERVICE_NAME }}/${{ inputs.SERVICE_NAME }}"
        elif [[ "${{ inputs.NODE_ENV }}" == "preview" ]]; then
          echo "Deploying to preview environment"
          DEPLOY_TARGET="${{ inputs.SERVICE_NAME }}-preview/${{ inputs.SERVICE_NAME }}-preview"
        else
          echo "Unknown NODE_ENV: ${{ inputs.NODE_ENV }}"
          exit 1
        fi

        # Redeploy
        koyeb service redeploy "$DEPLOY_TARGET"

    - name: Notify about preview deployment
      if: ${{ inputs.NODE_ENV == 'preview' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        script: |
          const service = process.env.SERVICE_NAME;
          const body = [
            `## ${service} Preview Deployment Ready!`,
            ``,
            `### Service: \`${service}\``,
            ``,
            `**Preview URL:** [Check it out here](https://${service}-preview.ashgw.me)`,
            ``,
            `---`,
            `> This preview environment reflects the changes in this PR. It deploys this version of the app as soon as the "deploy-preview" label is added.`
          ].join("\n");
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body
          });
      env:
        SERVICE_NAME: ${{ inputs.SERVICE_NAME }}
