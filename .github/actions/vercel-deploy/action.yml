name: Vercel Deployment

description: Deploy to Vercel and set the URL

inputs:
  deployment_environment:
    description: "Environment, either 'production' or 'preview' (this will determine which image is pushed and where it redeploys)"
    required: true
  GITHUB_TOKEN:
    description: "GitHub token"
    required: true
  APP_NAME:
    description: "The working directory/project name you're trying to deploy. Example: 'www', 'blog'"
    required: true
  VERCEL_TOKEN:
    description: "Vercel token for authentication"
    required: true
  VERCEL_ORG_ID:
    description: "Vercel organization ID"
    required: true
  VERCEL_PROJECT_ID:
    description: "Vercel project ID"
    required: true

runs:
  using: "composite"
  steps:
    - name: Deploy to Vercel
      shell: bash
      env:
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}

      run: |
        cd apps/${{ inputs.APP_NAME }} && \
        DEPLOY_URL=$(pnpm --filter @ashgw/${{ inputs.APP_NAME }} deploy:vercel-${{ inputs.deployment_environment }} --token=${{ inputs.VERCEL_TOKEN }} | grep -Eo 'https?://[^ ]+')
        echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
        echo "::notice title=${{ inputs.deployment_environment }} URL::$DEPLOY_URL"
        echo "${{ inputs.deployment_environment }}-url=$DEPLOY_URL" >> $GITHUB_OUTPUT

    - name: Notify mfs about the deployment URL
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        DEPLOYMENT_ENVIRONMENT: ${{ inputs.deployment_environment }}
        APP_NAME: ${{ inputs.APP_NAME }}

      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ${process.env.DEPLOYMENT_ENVIRONMENT} Deployment Ready! 

            ### Project: \`${process.env.APP_NAME}\`
            
            **${process.env.DEPLOYMENT_ENVIRONMENT} URL:** [Check it out here](${process.env.DEPLOY_URL})
            
            ---
            > This ${process.env.DEPLOYMENT_ENVIRONMENT} environment reflects the changes in this PR. And deploys this version of the app as soons as the "deploy-preview" label is added`
          })
