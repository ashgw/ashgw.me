name: CI / Database Migration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment to run migrations on (preview/production)"
      WITH_DEPLOY:
        required: false
        type: boolean
        description: "Whether to run the deploy step"

jobs:
  migrate:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm-install
      - uses: ./.github/actions/setup-env
        with:
          NODE_ENV: ${{ inputs.environment }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_WWW_URL: ${{ secrets.NEXT_PUBLIC_WWW_URL }}
          NEXT_PUBLIC_BLOG_URL: ${{ secrets.NEXT_PUBLIC_BLOG_URL }}
          NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID }}
          NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
          NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_sssPUBLIC_POSTHOG_HOST }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_BUCKET_REGION: ${{ secrets.S3_BUCKET_REGION }}
          S3_BUCKET_ACCESS_KEY_ID: ${{ secrets.S3_BUCKET_ACCESS_KEY_ID }}
          S3_BUCKET_SECRET_KEY: ${{ secrets.S3_BUCKET_SECRET_KEY }}
          S3_BUCKET_URL: ${{ secrets.S3_BUCKET_URL }}
          KIT_API_KEY: ${{ secrets.KIT_API_KEY }}

      - name: export DATABASE_URL to work around inner package issue
        run: |
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV

      - name: Check for schema drift
        shell: bash
        run: |
          pnpm --filter @ashgw/db exec prisma migrate diff \
          --from-url="$DATABASE_URL" \
          --to-schema-datamodel=./prisma/schema.prisma \
          --script > migration.sql

          chmod +x .github/scripts/check-migration-safety.sh
          .github/scripts/check-migration-safety.sh migration.sql

      - name: Validate migrations
        run: pnpm --filter @ashgw/db migrate:status

      - name: Run migrations
        if: success() && inputs.WITH_DEPLOY == true
        run: pnpm --filter @ashgw/db migrate:deploy
