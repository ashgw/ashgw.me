name: Dispatch / update-changelog

on:
  pull_request:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-changelog:
    if: github.event.label.name == 'update-changelog' && github.actor == 'ashgw' && github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate GitHub CLI
        shell: bash
        run: |
          set -euo pipefail
          umask 077
          install -m 600 /dev/null ~/.gh_token
          printf '%s' "${{ secrets.GA_AUTOMATIONS_PR_RW }}" > ~/.gh_token
          gh auth login --hostname github.com --with-token < ~/.gh_token

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false

      - uses: ./.github/actions/pnpm-install

      - name: Run Changeset versioning
        run: pnpm changelog:version

      - name: Create changelog PR
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          RANDOM_SUFFIX: ${{ github.run_id }}
        shell: bash
        run: |
          set -euo pipefail
          BRANCH_NAME="changelog-update-${PR_NUMBER}-${RANDOM_SUFFIX}"

          git checkout -b "${BRANCH_NAME}" origin/main
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "chore: changelog + version bump" || echo "Nothing to commit"
          git push origin "${BRANCH_NAME}"

          gh pr create \
            --title "chore: changelog update for PR #${PR_NUMBER}" \
            --body "This PR contains changelog updates and version bumps for PR #${PR_NUMBER}" \
            --base main \
            --head "${BRANCH_NAME}"

      - name: Shred token and clean auth
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          # Shred token file
          if [ -f ~/.gh_token ]; then
            shred -u ~/.gh_token || rm -f ~/.gh_token
          fi
          # Log out gh and nuke any persisted auth
          gh auth logout --hostname github.com --yes || true
          rm -rf ~/.config/gh || true
          # Clear any stray git creds
          git config --global --unset credential.helper || true
          [ -f ~/.git-credentials ] && shred -u ~/.git-credentials || true
