name: CI

on:
  workflow_call:

jobs:
  unit-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 19, 20]
    services:
      neon:
        image: neondatabase/neon_local:latest
        env:
          DRIVER: postgres
          NEON_PROJECT_ID: dummy-local-project
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -h localhost"
          --health-interval 3s
          --health-timeout 2s
          --health-retries 10

    steps:
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client curl

      - name: Wait for Neon Local to be ready
        run: |
          for i in $(seq 1 30); do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres ($i)..."
            sleep 2
          done

      - uses: actions/checkout@v4

      - uses: ./.github/actions/pnpm-install
        with:
          node-version: ${{ matrix.node-version }}

      - uses: ./.github/actions/setup-env
        with:
          NODE_ENV: "development"
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/main?sslmode=disable
          NEXT_PUBLIC_WWW_URL: ${{ secrets.NEXT_PUBLIC_WWW_URL }}
          NEXT_PUBLIC_BLOG_URL: ${{ secrets.NEXT_PUBLIC_BLOG_URL }}
          NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_WWW_GOOGLE_ANALYTICS_ID }}
          NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_BLOG_GOOGLE_ANALYTICS_ID }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
          NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_BUCKET_REGION: ${{ secrets.S3_BUCKET_REGION }}
          S3_BUCKET_ACCESS_KEY_ID: ${{ secrets.S3_BUCKET_ACCESS_KEY_ID }}
          S3_BUCKET_SECRET_KEY: ${{ secrets.S3_BUCKET_SECRET_KEY }}
          S3_BUCKET_URL: ${{ secrets.S3_BUCKET_URL }}
          KIT_API_KEY: ${{ secrets.KIT_API_KEY }}

      - name: Setup Database Schema
        run: |
          export DATABASE_URL="postgres://postgres:postgres@localhost:5432/main?sslmode=disable"
          pnpm --filter @ashgw/db exec prisma migrate deploy

      - name: Run Unit + Integration Tests
        run: pnpm test:unit-integration

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      neon:
        image: neondatabase/neon_local:latest
        env:
          DRIVER: postgres
          NEON_PROJECT_ID: dummy-local-project
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -h localhost"
          --health-interval 3s
          --health-timeout 2s
          --health-retries 10

    steps:
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client curl

      - name: Wait for Neon Local to be ready
        run: |
          for i
